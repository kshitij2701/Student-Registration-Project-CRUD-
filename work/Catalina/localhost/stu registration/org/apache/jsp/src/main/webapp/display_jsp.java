/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.7
 * Generated at: 2023-05-15 04:40:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.src.main.webapp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;

public final class display_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write(".button {\r\n");
      out.write("  display: inline-block;\r\n");
      out.write("  padding: 9px 17px;\r\n");
      out.write("  background-color: #f44336;\r\n");
      out.write("  color: #fff;\r\n");
      out.write("  text-align: center;\r\n");
      out.write("  text-decoration: none;\r\n");
      out.write("  font-size: 14px;\r\n");
      out.write("  border-radius: 4px;\r\n");
      out.write("  border: none;\r\n");
      out.write("  cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".button:hover {\r\n");
      out.write("  background-color: #d32f2f;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>FORM DATABASE</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");


ResultSet rs = null;
Connection con = null;
PreparedStatement ps = null;

try {
	Class.forName("com.mysql.cj.jdbc.Driver");
    con = DriverManager.getConnection("jdbc:mysql://localhost:3306/std_data", "root", "qwer123#");
    
    String selectQuery = "SELECT * FROM student";
    ps = con.prepareStatement(selectQuery);
    rs = ps.executeQuery();
    
    out.println("<style>");
    out.println("table {");
    out.println("  border-collapse: collapse;");
    out.println("  width: 100%;");
    out.println("font-family: Arial, Helvetica, sans-serif;");
    out.println("}");
    out.println("th, td {");
    out.println("  text-align: left;");
    out.println("  padding: 10px;");
    out.println("}");
    out.println("th {");
    out.println("  background-color: #0077b6;");
    out.println("  color: #fff;");
    out.println("  text-transform: uppercase;");
    out.println("}");
    out.println("tr:nth-child(even) {");
    out.println("  background-color: #f2f2f2;");
    out.println("}");
    out.println("tr:hover {");
    out.println("  background-color: #e2e2e2;");
    out.println("}");
    out.println("td:first-child, th:first-child {");
    out.println("  border-left: none;");
    out.println("}");
    out.println("td:last-child, th:last-child {");
    out.println("  border-right: none;");
    out.println("}");
    out.println("</style>");
    
    out.println("<h2 align='center'>Registration Details</h2>");

	 if (!rs.isBeforeFirst()) {
	     out.println("<div style='text-align:center;'><h1 style='color:red;'>No Record Found</h1>");
	 } else {
	     out.println("<table>");
	     out.println("<tr><th>Name</th><th>Email-Id</th><th>Roll no</th><th>Physics</th><th>Chemistry</th><th>Maths</th><th>Edit</th><th>Delete</th></tr>");

	     while (rs.next()) {
	    	out.print("<tr>");
	    	out.print("<td>" + rs.getString("name") + "</td>");
	    	out.print("<td>" + rs.getString("email_id") + "</td>");
	    	out.print("<td>" + rs.getString("roll_no") + "</td>");
	    	out.print("<td>" + rs.getString("physics") + "</td>");
	    	out.print("<td>" + rs.getString("chemistry") + "</td>");
	    	out.print("<td>" + rs.getString("maths") + "</td>");
	    	out.print("<td><a href=\"updatePage.jsp?u=" + rs.getString("email_id") + "\" class=\"button\">Update</a></td>");
	    	out.print("<td><a href=\"deleteData.jsp?d=" + rs.getString("email_id") + "\" class=\"button\">Delete</a></td>");
	
	    	
	    	out.print("</tr>");
	    }
	    out.println("</table>");
    
 
	 }
	    
}catch(Exception e){
	out.print(e);
}

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
